{
  "required": true,
  "minVersion": "0.8",
  "package": "org.carpetorgaddition.mixin",
  "compatibilityLevel": "JAVA_21",
  "plugin": "org.carpetorgaddition.debug.DebugIMixinConfigPlugin",
  "mixins": [
    "command.EntityPlayerMPFakeMixin",
    "command.FishingBobberEntityAccessor",
    "command.ServerPlayerEntityMixin",
    "compat.fabricapi.AbstractChanneledNetworkAddonInvoker",
    "compat.fabricapi.AbstractNetworkAddonMixin",
    "debug.HandledScreenAccessor",
    "debug.PhantomSpawnerMixin",
    "debug.PlayerEntityMixin",
    "event.ServerPlayerEntityMixin",
    "event.carpet.LoggerRegistryMixin",
    "logger.FishingBobberEntityMixin",
    "logger.FluidBlockMixin",
    "logger.HUDControllerMixin",
    "logger.LoggerAccessor",
    "logger.VillagerEntityMixin",
    "logger.WanderingTraderManagerMixin",
    "rule.AbstractBlockStateMixin",
    "rule.AbstractPiglinEntityMixin",
    "rule.BatEntityMixin",
    "rule.BeaconBlockEntityMixin",
    "rule.BiomeMixin",
    "rule.CommandManagerMixin",
    "rule.ComparatorBlockMixin",
    "rule.ContainerComponentAccessor",
    "rule.ContainerComponentMixin",
    "rule.CreeperEntityMixin",
    "rule.EnchantmentHelperMixin",
    "rule.EndermanEntityMixin",
    "rule.EnderPearlEntityMixin",
    "rule.EntityAccessor",
    "rule.EntityMixin",
    "rule.FarmlandBlockMixin",
    "rule.FireworkRocketItemMixin",
    "rule.FishingMixin",
    "rule.GameRuleCommandMixin",
    "rule.HayBlockMixin",
    "rule.IronGolemEntityMixin",
    "rule.ItemEntityMixin",
    "rule.ItemMixin",
    "rule.LivingEntityMixin",
    "rule.MerchantScreenHandlerAccessor",
    "rule.MobEntityMixin",
    "rule.NetworkThreadUtilsMixin",
    "rule.ObserverBlockMixin",
    "rule.PhantomSpawnerMixin",
    "rule.PiglinBrainMixin",
    "rule.PistonBlockMixin",
    "rule.PlayerEntityAccessor",
    "rule.PlayerEntityMixin",
    "rule.RedstoneWireBlockMixin",
    "rule.RepeaterBlockMixin",
    "rule.SculkShriekerBlockMixin",
    "rule.SeedCommandMixin",
    "rule.ServerPlayerEntityMixin",
    "rule.ServerPlayerInteractionManagerMixin",
    "rule.ShulkerBoxBlockMixin",
    "rule.SmithingScreenHandlerMixin",
    "rule.SpawnHelperInfoAccessor",
    "rule.TeleportCommandMixin",
    "rule.TradeOfferMixin",
    "rule.TridentEntityMixin",
    "rule.TridentItemMixin",
    "rule.TurtleEggBlockMixin",
    "rule.VillagerEntityMixin",
    "rule.WetSpongeBlockMixin",
    "rule.blockdropsdirectlyenterinventory.BlockMixin",
    "rule.blockdropsdirectlyenterinventory.ServerPlayerInteractionManagerMixin",
    "rule.canminespawner.MobSpawnerBlockEntityMixin",
    "rule.canminespawner.SpawnerBlockMixin",
    "rule.carpet.EntityPlayerMPFakeMixin",
    "rule.carpet.LoggerAccessor",
    "rule.carpet.SettingsManagerAccessor",
    "rule.carpet.SettingsManagerMixin",
    "rule.cceupdatesuppression.BlockPlacementDispenserBehaviorMixin",
    "rule.cceupdatesuppression.ShulkerBoxBlockMixin",
    "rule.disablemobpeacefuldespawn.MobEntityMixin",
    "rule.disablemobpeacefuldespawn.WitherEntityMixin",
    "rule.enchantment.AnvilScreenHandlerMixin",
    "rule.enchantment.EnchantmentMixin",
    "rule.entityplayeractionpack.ActionAccessor",
    "rule.entityplayeractionpack.EntityPlayerActionPackAccessor",
    "rule.fakeplayerkeepinventory.PlayerEntityMixin",
    "rule.fakeplayerkeepinventory.ServerPlayerEntityMixin",
    "rule.respawnblocksexplode.BedBlockMixin",
    "rule.respawnblocksexplode.RespawnAnchorBlockMixin",
    "rule.shulkerboxstackable.CrafterBlockMixin",
    "rule.shulkerboxstackable.DropperBlockMixin",
    "rule.shulkerboxstackable.HopperBlockEntityMixin",
    "rule.shulkerboxstackable.HopperMinecartEntityMixin",
    "rule.shulkerboxstackable.ItemStackMixin",
    "rule.shulkerboxstackable.ScreenHandlerMixin",
    "util.CommandRegistryAccessMixin",
    "util.CraftingScreenHandlerMixin",
    "util.MinecraftServerMixin",
    "util.PlayerManagerMixin",
    "util.ServerPlayerEntityMixin",
    "util.ServerPlayNetworkHandlerMixin"
  ],
  "client": [
    "debug.ScreenAccessor",
    "network.ScreenHandlerMixin",
    "network.SlotMixin",
    "rule.client.carpet.SettingsManagerMixin"
  ],
  "injectors": {
    "defaultRequire": 1
  }
}
